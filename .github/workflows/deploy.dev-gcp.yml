name: Deploy-to-dev-gcp
on:
  workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
      - uses: actions/checkout@v3
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE_VERSION_RAW=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
          echo "CI=true" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=ghcr.io/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${IMAGE_VERSION_RAW,,}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
          echo "PUBLIC_URL=https://cdn.nav.no/personbruker/tilbakemeldinger/$(echo ${IMAGE_VERSION_RAW,,})/build" >> $GITHUB_ENV
      - name: Define client-side environment
        run: |
          echo "REACT_APP_ENV=dev" >> $GITHUB_ENV
          echo "REACT_APP_HOST=https://www.intern.dev.nav.no" >> $GITHUB_ENV
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: dependencies /server
        working-directory: ./server
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        run: npm ci
      - run: npm run build
      - name: Docker build and push
        run: |
          echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION .
          docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION

      - id: upload
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: personbruker
          source: ./build
          destination: tilbakemeldinger/${{ env.IMAGE_VERSION }}
      - run: echo uploaded file ${{ steps.upload.outputs.uploaded }}
        shell: bash
      - name: Generate nais variables
        run: |
          cat > .nais/vars.yaml <<EOF
          namespace: personbruker
          ingresses:
            - https://www.intern.dev.nav.no/person/kontakt-oss/nn/tilbakemeldinger
            - https://www.intern.dev.nav.no/person/kontakt-oss/nb/tilbakemeldinger
            - https://www.intern.dev.nav.no/person/kontakt-oss/en/tilbakemeldinger
            - https://www.intern.dev.nav.no/person/kontakt-oss/tilbakemeldinger
          image: $IMAGE_REGISTRY/$IMAGE_NAME
          version: $IMAGE_VERSION
          EOF
      - uses: nais/deploy/actions/deploy@v1
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/config-dev.yaml
          VARS: .nais/vars.yaml
